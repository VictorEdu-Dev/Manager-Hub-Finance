services:
  wildfly:
    build: .
    container_name: wildfly-server
    environment:
      - WILDFLY_HOME=/opt/jboss/wildfly
      - JBOSS_MODE=standalone.xml
    ports:
      - "8080:8080"
      - "9990:9990"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./postgresql-module:/opt/jboss/wildfly/modules/org/postgresql/main
    command: >
      /bin/sh -c "
        # Criação do usuário admin
        /opt/jboss/wildfly/bin/add-user.sh --user victorepc --password 6374 --realm ManagementRealm --role admin --silent || echo 'Admin user already exists';

        # Baixando o driver PostgreSQL
        curl -L https://jdbc.postgresql.org/download/postgresql-42.5.4.jar -o /opt/jboss/wildfly/modules/org/postgresql/main/postgresql-42.5.4.jar;

        # Criação do módulo PostgreSQL
        mkdir -p /opt/jboss/wildfly/modules/org/postgresql/main;
        echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' > /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '<module xmlns=\"urn:jboss:module:1.3\" name=\"org.postgresql\">' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '  <resources>' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '    <resource-root path=\"postgresql-42.5.4.jar\" />' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '  </resources>' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '  <dependencies>' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '    <module name=\"javax.api\" />' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '    <module name=\"javax.transaction.api\" />' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '  </dependencies>' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;
        echo '</module>' >> /opt/jboss/wildfly/modules/org/postgresql/main/module.xml;

        # Iniciando o WildFly
        /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 -c standalone.xml &
        
        # Aguardar o WildFly iniciar por mais tempo
        sleep 10 &&
        
        # Adicionando o driver PostgreSQL via CLI
        /opt/jboss/wildfly/bin/jboss-cli.sh --connect --command='/subsystem=datasources/jdbc-driver=postgresql:add(driver-name="postgresql", driver-module-name="org.postgresql", driver-class-name="org.postgresql.Driver")' &&

        # Adicionando o DataSource PostgreSQL via CLI
        /opt/jboss/wildfly/bin/jboss-cli.sh --connect --command='/subsystem=datasources/data-source=PostgresDS:add(jndi-name=java:/PostgresDS, driver-name=postgresql, connection-url=jdbc:postgresql://postgres:5432/manager-hub, user-name=vepc, password=105070, use-ccm=false, max-pool-size=20, blocking-timeout-wait-millis=5000)' &&
      
        # Reiniciar o servidor após as configurações
        /opt/jboss/wildfly/bin/jboss-cli.sh --connect command=:shutdown &&
        /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 -c standalone.xml
      "

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: manager-hub
      POSTGRES_USER: vepc
      POSTGRES_PASSWORD: 105070
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: >
      bash -c "
        sed -i '/# IPv4 local connections:/a host    all             all             0.0.0.0/0            trust' /var/lib/postgresql/data/pg_hba.conf && 
        docker-entrypoint.sh postgres
      "

  redis:
    image: redis:latest
    container_name: redis-db-aux
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
